@use '../abstracts' as a;

.password-generator {
    width: 100%;
    max-width: a.rem(540);
    color: var(--platinum);

    background-color: inherit;

    @include a.add-flex(column, $align-items: center, $gap: clamp(a.rem(16), a.rem(16) + 1.5vw, a.rem(32)));

    > *:not(:first-child) {
        background-color: var(--dark-gunmetal);
        align-self: stretch;
        padding: a.rem(16);

        @media all and (min-width: 768px) {
            padding: a.rem(24) a.rem(32);
        }

    }

    &__output {
        @include a.add-flex(row, $justify-content: space-between, $align-items: center);
    }

    &__select-password-options {
        @include a.add-flex(column, $gap: a.rem(32));
    }

    &__select-password-length {
        @include a.add-flex(row, $align-items: center, $flex-wrap: wrap);
        row-gap: clamp(a.rem(8), a.rem(8) + 1.5vw, a.rem(16));

        > * {
            flex: 1 1 50%;
        }

        span {
            text-align: right;
        }
    }

    &__select-character-options {
        @include a.add-flex(column, $gap: clamp(a.rem(16), a.rem(16) + 1vw, a.rem(20)));
    }

    &__action-generate-password {
        text-transform: uppercase;
        text-align: center;
        padding: a.rem(21) 0;
        background-color: var(--mint-green);
        border: 2px solid var(--mint-green);

        svg {
            margin-left: a.rem(8);
            fill: var(--dark-gunmetal);
            transition: transform 0.2s; 
        }

        &:hover {
            cursor: pointer;
            background-color: inherit;
            color: var(--mint-green);

            svg {
                transform: translateX(3px);
                fill: var(--mint-green);
            }
        }

    }

}